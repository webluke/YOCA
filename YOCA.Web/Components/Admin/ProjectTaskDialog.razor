@inject ISnackbar Snackbar
@inject ProjectTaskDataAccess dataAccess
@inject Statuses state
@rendermode InteractiveServer

<MudPopoverProvider />
<MudSnackbarProvider />

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="fas fa-hammer" Class="mr-3 mb-n1" />
            Project Task
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm Model="@model">
            <MudGrid>
                <MudItem xs="12">
                    <MudCard>
                        <MudCardContent>
                            <MudTextField @bind-Value="model.Title" Label="Title" />
                            <MudGrid>
                                <MudItem xs="6">
                                    <MudNumericField @bind-Value="model.Order" Label="Order" />
                                </MudItem>
                                <MudItem xs="6">
                                    <MudSelect @bind-Value="@model.Status" Label="Status">
                                        @foreach (var status in state.DefaultStatuses)
                                        {
                                            <MudSelectItem Value="@status.Key">@status.Value.Name</MudSelectItem>
                                        }
                                    </MudSelect>
                                </MudItem>
                            </MudGrid>
                            <br />
                            <MarkdownEditor @bind-Value="model.Description" Theme="3024-night" />
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            </MudGrid>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        @if (String.IsNullOrEmpty(model.Id))
        {
            <MudButton Color="Color.Success" OnClick="Create">Create</MudButton>
        }
        else
        {
            <MudButton Color="Color.Success" OnClick="Update">Update</MudButton>
        }
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }

    [Parameter]
    public ProjectTaskModel model { get; set; }

    private void Cancel() => MudDialog.Cancel();

    private async void Update()
    {
        await dataAccess.Update(model);
        Snackbar.Add("Project Task Updated", Severity.Success);
        MudDialog.Close(DialogResult.Ok(true));
    }

    private async void Create()
    {
        await dataAccess.Insert(model);
        Snackbar.Add("Project Task Created", Severity.Success);
        MudDialog.Close(DialogResult.Ok(true));
    }
}
