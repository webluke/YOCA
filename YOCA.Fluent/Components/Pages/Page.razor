@page "/page/{slug}"
@inject PageDataAccess pageData
@inject IJSRuntime JS
@rendermode InteractiveServer

@if (p == null)
{
    <div>Loading or not found...</div>
}
else
{
    <PageTitle>@p.Title</PageTitle>
    <h3>@p.Title</h3>
    <br />
    <FluentCard Height="auto">
        @((MarkupString)MarkdownService.Parse(p.Content))
    </FluentCard>
}

@code {
    [Parameter]
    public string slug { get; set; }
    public PageModel p { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await RefreshData();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JS.InvokeVoidAsync("highlightCode");
    }

    private async Task RefreshData()
    {
        p = (await pageData.GetSlug(slug));

    }
}
