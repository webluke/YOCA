@page "/rewind/{year:int}/{month:int}/{slug}"

@inject RewindDataAccess rewindData
@rendermode InteractiveServer
@inject IJSRuntime JS

@if (rewind != null)
{
    <PageTitle>@rewind.Date.ToString("MMMM yyyy") - @rewind.Title</PageTitle>
    <h3>@rewind.Date.ToString("MMMM yyyy") - @rewind.Title</h3>
    <br />
    <FluentCard Height="auto">
        @((MarkupString)MarkdownService.Parse(rewind.Content))
    </FluentCard>
    <FluentAnchor Href="/rewind" Appearance="Appearance.Accent" IconEnd="@(FontAwesome.Icon("fas fa-clock-rotate-left"))">Monthly Rewind List</FluentAnchor>
}


@code {
    [Parameter]
    public int year { get; set; }
    [Parameter]
    public int month { get; set; }
    [Parameter]
    public string slug { get; set; }
    private RewindModel? rewind;

    protected override async Task OnInitializedAsync()
    {
        await RefreshData();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JS.InvokeVoidAsync("highlightCode");
    }

    private async Task RefreshData()
    {
        rewind = await rewindData.GetYearMonth(year, month);
    }
}