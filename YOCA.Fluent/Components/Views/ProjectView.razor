@inject Statuses state

@if (project != null)
{
    <FluentCard Height="auto">
        <h4>@project.Title</h4>
        <StatusBadge statusIndex="@project.Status" />
        <br />
        <h5>Start: @project.StartDate - End: @project.EndDate</h5>
        <FluentCard Height="auto">
            @((MarkupString)MarkdownService.Parse(project.Description))
        </FluentCard>
        <br />
        <FluentStack>
            @if (project.Boards != null){
            @foreach (var board in project.Boards)
            {
                <FluentCard>
                    <h5>@board.Title</h5>
                    @if (board.Tasks.Count > 0)
                    {
                        <FluentStack Orientation="Orientation.Vertical">
                            @foreach (var task in board.Tasks)
                            {
                                <FluentCard>
                                    <h4>@task.Title</h4>
                                    <StatusBadge statusIndex="@task.Status" />
                                    <br />
                                        @((MarkupString)MarkdownService.Parse(task.Description))
                                </FluentCard>
                            }
                        </FluentStack>
                    }
                </FluentCard>
            }
            }
        </FluentStack>
    </FluentCard>
}

@code {
    [Parameter]
    public ProjectModel project { get; set; }

    protected override void OnInitialized()
    {

    }

}
